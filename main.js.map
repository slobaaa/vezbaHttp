{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/autoService.ts","webpack:///./src/app/in-memory-auto.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h2>Ispis svih kola</h2>\\r\\n                <ul *ngFor=\\\"let auto of autos;let i = index\\\">\\r\\n                    <li><strong>Model: </strong>{{auto.model}}<br><strong>Cena: </strong>{{auto.cena}}<br><strong>Godiste: </strong>{{auto.god}}<hr>\\r\\n                        <button class=\\\"btn btn-primary\\\" (click)=\\\"editAuto(auto)\\\">Edit Book</button>\\r\\n                        <button class=\\\"btn btn-warning\\\" (click)=\\\"deleteAuto(auto)\\\">Delete Book</button>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <h2>Dodaj nova kola</h2>\\r\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"addAuto()\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#forma\\\">Dodaj nova kola</button>\\r\\n            \\r\\n                        <form (ngSubmit)=\\\"onPosalji(model.value, cena.value, godiste.value)\\\" #f=\\\"ngForm\\\" >\\r\\n                        <div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"model\\\">Model:</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"model\\\" ngModel required name=\\\"model\\\" #model=\\\"ngModel\\\" [(ngModel)] = \\\"modelNgModel\\\">\\r\\n                                <span class=\\\"help-block\\\" *ngIf=\\\"!model.valid && model.touched\\\">Unesite validan model</span>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"cena\\\">Cena:</label>\\r\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"cena\\\" ngModel required name=\\\"cena\\\" #cena=\\\"ngModel\\\" min=\\\"1\\\" [(ngModel)] = \\\"cenaNgModel\\\">\\r\\n                                <span class=\\\"help-block\\\" *ngIf=\\\"!cena.valid && cena.touched\\\">Unesite validnu cenu</span>\\r\\n                            </div>\\r\\n                            <div class=\\\"radio\\\" *ngFor=\\\"let god of godiste\\\">\\r\\n                                    <label>\\r\\n                                      <input type=\\\"radio\\\"\\r\\n                                      name=\\\"god\\\"\\r\\n                                      \\r\\n                                      #godiste=\\\"ngModel\\\"\\r\\n                                      ngModel\\r\\n                                      [value]=\\\"god\\\"\\r\\n                                      [(ngModel)] = \\\"godNgModel\\\"/>\\r\\n                                      {{god}}\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                        </div>\\r\\n                        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\">Submit</button>\\r\\n                    </form>\\r\\n                </div>\\r\\n        \\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ViewChild } from '@angular/core';\nimport { AutoService } from './autoService';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private autoService: AutoService) { }\n  autos;\n  modelNgModel;\n  godNgModel;\n  cenaNgModel;\n  @ViewChild('f') signupForm: NgForm;\n  auto = {\n    model: '',\n    cena: '',\n    god: ''\n  };\n  godiste = ['mladji od 2005', 'stariji od 2005'];\n  poslato = false;\n  editing = false;\n  event = 'add';\n\n  onPosalji(model: string, cena: number, god: number) {\n    this.poslato = true;\n    this.auto.model  = this.signupForm.value.model;\n    this.auto.cena  = this.signupForm.value.cena;\n    this.auto.god = this.signupForm.value.god;\n\n      const autoSaAddForme = {\n        id: this.autos.length,\n        model:  this.signupForm.value.model,\n        cena: this.signupForm.value.cena,\n        god: this.signupForm.value.god\n      };\n      if (this.event === 'add') {\n        this.autos.push(autoSaAddForme);\n        this.autoService.storeAuto(autoSaAddForme)\n        .subscribe(\n          (response) => console.log(response),\n          (error) => console.log(error)\n        );\n      }\n  }\n    getAutos() {\n      this.autoService.getAutos()\n      .subscribe(\n        (autos: any[]) => this.autos = autos,\n        (error) => console.log(error)\n      );\n    }\n    ngOnInit() {\n      this.getAutos();\n    }\n\n    editAuto(auto) {\n      this.event = 'edit';\n      if (this.event === 'edit') {\n        this.editing = true;\n        this.auto = auto;\n        this.modelNgModel = this.auto.model;\n        this.cenaNgModel = this.auto.cena;\n        this.godNgModel = this.auto.god;\n      }\n    }\n\n    deleteAuto(auto) { // za brisanje auta\n      this.autos = this.autos.filter(a => a !== auto);\n      this.autoService.deleteAuto(auto.id)\n      .subscribe(\n        (response) => console.log ('Auto deleted'),\n        (error) => console.log(error)\n      );\n    }\n\n    addAuto() { // da bi mi promenio event na add\n      this.event = 'add';\n      this.getAutos();\n      this.modelNgModel = '';\n        this.cenaNgModel = '';\n        this.godNgModel = '';\n    }\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AutoService } from './autoService';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryAuto } from './in-memory-auto';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    HttpClientInMemoryWebApiModule.forRoot(\n      InMemoryAuto, { dataEncapsulation: false }\n    )\n\n  ],\n  providers: [AutoService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\r\n\r\n@Injectable()\r\nexport class AutoService {\r\n        constructor(private httpClient: HttpClient) { }\r\n        headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n\r\n        getAutos() {\r\n            return this.httpClient.get('api/autos', {\r\n                headers: this.headers\r\n            });\r\n        }\r\n        storeAuto(auto) {\r\n            return this.httpClient.post('api/autos', auto, {\r\n                headers: this.headers\r\n            });\r\n        }\r\n        deleteAuto(id) {\r\n            return this.httpClient.delete('api/autos/' + id, {\r\n                headers: this.headers\r\n            });\r\n        }\r\n        editAuto(auto) {\r\n            return this.httpClient.put('api/autos', auto, {\r\n                headers: this.headers\r\n            });\r\n        }\r\n}\r\n\r\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\r\n\r\nexport class InMemoryAuto implements InMemoryDbService {\r\n    createDb() {\r\n        const autos = [\r\n        ];\r\n        return {autos};\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}